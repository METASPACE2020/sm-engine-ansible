---

- name: Deploying SM web app code
  user: ubuntu
  hosts: web

  vars:
    port: "{{ sm_webapp_port }}"
    cookie_secret: "{{ sm_webapp_cookie_secret }}"
    jwt_secret: "{{ sm_graphql_jwt_secret }}"
    admin_emails: "{{ sm_webapp_admin_emails }}"
    aws_access_key_id: "{{ sm_webapp_aws_access_key_id }}"
    aws_secret_access_key: "{{ sm_webapp_aws_secret_access_key }}"
    s3_bucket: "{{ sm_webapp_s3_bucket }}"
    graphql_url: "{{ sm_graphql_public_url }}"
    hostname: "{{ sm_webapp_hostname }}"
    google_client_id: "{{ sm_webapp_google_client_id }}"
    google_client_secret: "{{ sm_webapp_google_client_secret }}"
    google_callback_url: "http://{{ sm_webapp_hostname }}/auth/google/callback"
    redis_host: localhost
    redis_port: 6379

  tasks:
    - name: Clone sm-web-app git repository
      git:
        dest: "{{ sm_webapp_home }}"
        repo: https://github.com/METASPACE2020/sm-webapp.git
        update: yes
        force: yes
        recursive: yes
        version: "{{ sm_webapp_branch }}"
      register: git_deploy
      until: git_deploy | succeeded

    - name: Pull config template from the remote host
      fetch: src={{ sm_webapp_home }}/conf.js.template dest=/tmp/conf.js.template
             flat=yes fail_on_missing=yes

    - name: Save config as ./conf.js
      template: src=/tmp/conf.js.template dest={{ sm_webapp_home }}/conf.js
                owner=ubuntu group=ubuntu mode=0600

    - name: Pull client config template from the remote host
      fetch: src={{ sm_webapp_home }}/src/clientConfig.json.template dest=/tmp/clientConfig.json.template
             flat=yes fail_on_missing=yes

    - name: Save client config as ./src/clientConfig.json
      template: src=/tmp/clientConfig.json.template dest={{ sm_webapp_home }}/src/clientConfig.json
                owner=ubuntu group=ubuntu mode=0600

    - name: Install sm-web-app dependencies
      shell: npm install
      args:
        chdir: "{{ sm_webapp_home }}"
        executable: /bin/bash

    - name: Dereference metadata schema
      shell: node deref_schema.js > src/assets/metadata_schema.json
      args:
        chdir: "{{ sm_webapp_home }}"
        executable: /bin/bash

    - name: Run build app
      shell: npm run build
      args:
        chdir: "{{ sm_webapp_home }}"
        executable: /bin/bash

    - include: ../../restart_supervisor.yml supervisor_app=sm-web-app
