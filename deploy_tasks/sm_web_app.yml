- name: Clone sm-web-app git repository
  git:
    dest: "{{ sm_webapp_home }}"
    repo: "{{ sm_webapp_repo_url }}"
    update: yes
    force: yes
    recursive: yes
    track_submodules: no  # when 'no' submodules refer to commit specified in the web app repository
    version: "{{ sm_webapp_branch }}"
  register: git_deploy
  until: git_deploy | succeeded
  when: local_deploy is not defined

- name: Upload local files
  synchronize:
    src: "{{ sm_webapp_home }}/"
    dest: "{{ sm_webapp_home }}/"
    rsync_opts:
      - --exclude='config/*.js' --exclude=S3/*
      - --exclude='logs/*' --exclude='dist/*'
      - --exclude='node_modules/*' --exclude='.*'
  when: local_deploy is defined

- name: Pull config template from the remote host
  fetch: src={{ sm_webapp_home }}/conf.js.template dest=/tmp/conf.js.template
         flat=yes fail_on_missing=yes

- name: Save config as ./conf.js
  template: src=/tmp/conf.js.template dest={{ sm_webapp_home }}/conf.js
            owner=ubuntu group=ubuntu mode=0600

- name: Pull client config template from the remote host
  fetch: src={{ sm_webapp_home }}/src/clientConfig.json.template dest=/tmp/clientConfig.json.template
         flat=yes fail_on_missing=yes

- name: Save client config as ./src/clientConfig.json
  template: src=/tmp/clientConfig.json.template dest={{ sm_webapp_home }}/src/clientConfig.json
            owner=ubuntu group=ubuntu mode=0600

- name: Install sm-web-app dependencies
  shell: yarn install
  args:
    chdir: "{{ sm_webapp_home }}"
    executable: /bin/bash

- name: Run build app
  shell: yarn run build
  args:
    chdir: "{{ sm_webapp_home }}"
    executable: /bin/bash

- import_tasks: ../restart_supervisor.yml supervisor_app=sm-web-app
