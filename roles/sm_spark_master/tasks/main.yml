---

- name: Install system wide packages
  become: yes
  apt: name={{ item }} state=present
  with_items:
    - git
    - zip

- name: Create /opt/dev directory
  file: dest=/opt/dev state=directory owner=ubuntu group=ubuntu mode=0700
  become: yes

- name: Clone SM git repository
  git:
    dest: "{{ sm_home }}"
    repo: "https://github.com/SpatialMetabolomics/SM_distributed.git"
    update: yes
    version: "{{ sm_branch }}"

- name: Create /opt/data/sm_data directory
  file: dest=/opt/data/sm_data state=directory owner=ubuntu group=ubuntu mode=0700
  become: yes

- name: Create sm config files
  shell: cp sm_log.cfg.template sm_log.cfg  #&& cp config.json.template config.json
  args:
    chdir: "{{ sm_home }}/conf"
    creates: sm_log.cfg config.json

#- name: Install SM into conda environment
#  args:
#    chdir: "{{ sm_home }}"
#    executable: /bin/bash
#  shell: "source {{ venv }}/bin/activate {{ conda_env }} && pip install ."

##- name: Put activate_conda_env.sh scripts to
##  template: src=sm_config.json.j2
##            dest={{ sm_home }}/conf/config.json
##            owner={{ spark_user }}
##            group={{ spark_user }}
##            mode=0600

- name: Put SPARK_HOME into update sm-env.sh scripts
  template: src=sm-env.sh.j2 dest="{{ sm_home }}/scripts/sm-env.sh" owner=ubuntu group=ubuntu mode=0644

#- name: Ensure that scripts/run.sh is executable
#  file: path={{ sm_home }}/scripts/run.sh owner=ubuntu group=ubuntu mode=0755

#- name: Archive engine into a zip file
#  shell: zip -rq sm.zip sm
#  args:
#    chdir: "{{ sm_home }}"
#    creates: "{{ sm_home }}/sm.zip"

- name: Make sure .aws directory exists
  file: path=/home/{{ spark_user }}/.aws/
        state=directory
        owner={{ spark_user }}
        group={{ spark_user }}
        mode=0755
  when: aws_setup_access

- name: Put aws credentials file into the home dir
  template: src=aws_credentials.j2
            dest=/home/{{ spark_user }}/.aws/credentials
            owner={{ spark_user }}
            group={{ spark_user }}
            mode=0600
  when: aws_setup_access

- name: Put SM config to {{ sm_home }}/conf/config.json
  template: src=sm_config.json.j2
            dest={{ sm_home }}/conf/config.json
            owner={{ spark_user }}
            group={{ spark_user }}
            mode=0600

- name: Make sure that a directory for the SM logs exists
  file: path={{ sm_home }}/logs state=directory mode=0755

- name: Add Miniconda scripts to PATH as symlinks
  file: src={{ miniconda_prefix }}/bin/{{ item }} dest=/usr/local/bin/{{ item }} state=link
  with_items:
    - conda
    - activate
