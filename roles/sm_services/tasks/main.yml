---

#- name: Install git
#  apt: name=git state=present
#  become: yes
#
#- name: Create /opt/dev directory
#  file: dest=/opt/dev state=directory owner=ubuntu group=ubuntu mode=0700
#  become: yes
#
#- name: Clone sm git repository
#  git: >
#    dest=/opt/dev/sm
#    repo=https://github.com/SpatialMetabolomics/sm-engine.git
#    update=yes
#    version={{ sm_branch }}
#
#- name: Install psycopg2 (required by ansible)
#  apt: name=python-psycopg2 state=latest
#  become: yes
#
#- name: Create sm postgres user
#  postgresql_user: name=sm password={{ sm_postgres_password }} role_attr_flags=CREATEDB
#  become: yes
#  become_user: postgres
#
#- name: Create sm postgres database
#  become: yes
#  become_user: postgres
#  postgresql_db: name=sm owner=sm encoding=UTF8
#
#- name: Create sm schema
#  shell: psql -h localhost -U sm sm < /opt/dev/sm/scripts/create_schema.sql
#  args:
#    executable: /bin/bash
#
#- name: Create /opt/data/sm_data directory
#  file: dest=/opt/data/sm_data state=directory owner=ubuntu group=ubuntu mode=0700
#  become: yes
#
#- name: Pull SM config from the remote host
#  fetch: src={{ sm_home }}/conf/config.json.template dest=/tmp/config.json.template
#         flat=yes fail_on_missing=yes
#
#- name: Put SM config to {{ sm_home }}/conf/config.json
#  template: src=/tmp/config.json.template dest={{ sm_home }}/conf/config.json
#            owner=ubuntu group=ubuntu mode=0600
#
#- name: Install SM into conda environment
#  args:
#    chdir: /opt/dev/sm
#    executable: /bin/bash
#  shell: "source {{ venv }}/bin/activate {{ conda_env }} && pip install -U ."
#
#- name: Add Miniconda scripts to PATH as symlinks
#  become: yes
#  file: src={{ miniconda_prefix }}/bin/{{ item }} dest=/usr/local/bin/{{ item }} state=link
#  with_items:
#    - conda
#    - activate
#
#- name: Make sure that a directory for the SM logs exists
#  file: path={{ sm_home }}/logs state=directory mode=0755
#
#- name: Copy sm-web-app supervisor config file
#  template: src=sm-web-app.supervisor.j2 dest=/etc/supervisor/sm-web-app.supervisor
#            mode=0600 owner=ubuntu group=ubuntu
#
#- name: Create ElasticSearch index for the SM web app
#  shell: source {{ venv }}/bin/activate {{ conda_env }} && python scripts/create_es_index.py --drop
#  args:
#    chdir: "{{ sm_home }}"
#    executable: /bin/bash

##- include: traffic_forwarding.yml
##  when: traffic_forwarding_is_enabled
